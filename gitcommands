List of mostly used git commands:
git init #Git repository initialisation
git config --global user.name "Username" #configuring git system username
git config --global user.email "Useremail" #configuring git system useremail
git add filename #for adding a single to staging area
git add . #for adding all newly created or untracked giles to staging area
git commit -m "Message" #commit the single or multiple files or the logic updated along with message inside double quotes
git remote add origin <URL> #Adding remote repository in local system
git branch -m "New Name" #Rename current branch name
git push add origin #Pushing the file from local repository to remote repo
git log #For checking all commits in details
git log --oneline #For checking all commits in short summary
git log -n #for checking specific numbers of commits in detail
git show <commit id> #to check details of specific commit id
.gitignore #it is a file for ignoring the files which should not be tracked by git repository
git log --grep "Any word of commit msg" #to search any commit with specific keywrd or message
git branch #to check all branches available in repo
git branch <branchname> #to create new branch
git checkout <branchname> #switch from one branch to another branch
git diff <branchname> #to check the difference of current branch to another branch
git merge <branchname> #to merge unexisted file from other branch to current branch
git pull URL <branchname> #to pull from remote repository with respective branch where URL can be origin
git restore <filename> #to discard or unstaged the uncommitted local changes
git stash #to save uncompleted files or logic in stash list
git stash save "Message" #to save stash with message
git stash list #list out all stash in the list
git stash apply n #to bring the specific stash back into working directory untracked files where n is index number of stash in list
git stash drop #to delete the very latest inserted stash in list
git stash clear #it will delete the complete stash list
git commit -am "Message" #to add and commit together with a single command
git revert <commit id> #to delete and ignore or revert the specific change from workspace as well as staging area
git reset filename #to reset the file from staging area to unstaging area OR to delete snapshot of staging area and taking it back to unstaging area or untracked file
git clean -n #to check all untracked files which we can delete or add
git clean -f #to delete all untracked files
git mv filename1 filename2 #to rename file
git tag -a <tagname> -m "Tag message" <commit ID> #to give a special tag to a commit id to easily locate from log
git tag #list out all tags
git show <tagname> #to show the specific tag commit id along with tag message
git tag -d <tagname> #to delete a tag name
